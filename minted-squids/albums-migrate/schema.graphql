type Account @entity {
  "Account address"
  id: ID!
  transfersTo: [Transfer!] @derivedFrom(field: "to")
  transfersFrom: [Transfer!] @derivedFrom(field: "from")
}

type Transfer @entity {
  id: ID!
  blockNumber: Int! @index
  timestamp: DateTime! @index
  extrinsicHash: String @index
  from: Account!
  to: Account!
  amount: BigInt! @index
  fee: BigInt! # fee is calculated at the best effort and may be zero for some old extrinsics
  contract: ID!
}

type Owner @entity {
  id: ID!
  balance: BigInt!
}

type Collections @entity {
  id: ID!
  block: Int! @index
  timestamp: DateTime! @index
  extrinsicHash: String @index
  from: String! @index
  to: String! @index
  uri: String @index
  albumid: Int! @index
  songid: Int! @index
  maxsupply: Int! @index
  price: BigInt! @index
  contract: ID!
  updatedAt: DateTime
  deletedAt: DateTime
}

type MintItems @entity {
  id: ID!
  block: Int! @index
  timestamp: DateTime! @index
  extrinsicHash: String @index
  from: String! @index
  to: String! @index
  uri: String @index
  albumid: Int! @index
  songid: Int! @index
  maxsupply: Int! @index
  price: BigInt! @index
  contract: ID!
  updatedAt: DateTime
  deletedAt: DateTime
}

