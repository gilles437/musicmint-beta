"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WsRpcConnection = void 0;
const rpc_client_1 = require("@subsquid/rpc-client");
const util_timeout_1 = require("@subsquid/util-timeout");
const util_1 = require("../util");
const base_1 = require("./base");
class WsRpcConnection extends base_1.ConnectionBase {
    constructor(options) {
        super(options);
        this.client = new rpc_client_1.RpcClient(this.url);
    }
    call(id, method, params) {
        return (0, util_timeout_1.addTimeout)(this.client._callWithId(id, method, params), this.requestTimeout);
    }
    isRetryableError(err) {
        if (err instanceof rpc_client_1.RpcConnectionError)
            return true;
        if (err instanceof util_timeout_1.TimeoutError)
            return true;
        if ((0, util_1.isRateLimitError)(err))
            return true;
        return false;
    }
    async reconnect() {
        this.client.close();
        this.client = new rpc_client_1.RpcClient(this.url);
        await this.client.connect();
    }
    cleanup() {
        this.client.close();
    }
}
exports.WsRpcConnection = WsRpcConnection;
//# sourceMappingURL=ws.js.map